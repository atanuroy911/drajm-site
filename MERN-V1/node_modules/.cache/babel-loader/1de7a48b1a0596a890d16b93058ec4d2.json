{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __spreadArray = this && this.__spreadArray || function (to, from) {\n  for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) to[j] = from[i];\n\n  return to;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar constants_1 = require(\"./common/constants\");\n\nvar easing_1 = __importDefault(require(\"./common/easing\"));\n\nvar utils_1 = require(\"./utils/index\");\n\nvar wave_1 = __importDefault(require(\"./wave\"));\n\nvar plainOptionsWL = ['font', 'textColor', 'textFormatter', 'borderRadius'];\n\nvar WaveLoading =\n/** @class */\nfunction (_super) {\n  __extends(WaveLoading, _super);\n\n  function WaveLoading(selector, options) {\n    var _this = _super.call(this, selector, utils_1.merge({}, WaveLoading.defaultConfig, options)) || this; // 当前进度\n\n\n    _this.progress = 0; // 是否立即完成\n\n    _this.isCompletedImmediately = false; // 立即完成时的进度步进值\n\n    _this.fastStepValue = 1;\n    return _this;\n  }\n  /**\n   * 初始化数据和运行程序\n   */\n\n\n  WaveLoading.prototype.init = function () {\n    this.halfCH = this.canvasHeight / 2; // WaveLoading methods\n\n    this.setOffsetTop(this.canvasHeight);\n    this.setCanvasStyle(); // Wave methods\n\n    this.ownResizeEvent();\n    this.optionsNormalize();\n    this.loadMaskImage();\n    this.createDots(); // WaveLoading resize 事件需要放到 Wave 的后面\n\n    this.waveLoadingResizeEvent();\n  };\n  /**\n   * 设置 offsetTop 值\n   * @param top 高度值\n   */\n\n\n  WaveLoading.prototype.setOffsetTop = function (top) {\n    var offsetTop = this.options.offsetTop;\n\n    if (Array.isArray(offsetTop)) {\n      offsetTop.forEach(function (_item, i, arr) {\n        arr[i] = top;\n      });\n    } else {\n      this.options.offsetTop = top;\n    }\n  };\n  /**\n   * 设置画布 CSS 样式\n   */\n\n\n  WaveLoading.prototype.setCanvasStyle = function () {\n    this.canvas.style.borderRadius = this.options.borderRadius;\n  };\n  /**\n   * 绘制入口：计算进度，绘制波纹等\n   */\n\n\n  WaveLoading.prototype.draw = function () {\n    this.calcProgress();\n\n    if (this.progress < 100) {\n      this.mainDrawing();\n      this.requestAnimationFrame();\n    } else {\n      this.progress = 100;\n      this.mainDrawing();\n      this.eventEmitter.trigger(constants_1.EVENT_NAMES_WAVE_LOADING.FINISHED);\n    }\n  };\n  /**\n   * 绘制图案\n   */\n\n\n  WaveLoading.prototype.mainDrawing = function () {\n    var _this = this;\n\n    this.eventEmitter.trigger(constants_1.EVENT_NAMES_WAVE_LOADING.PROGRESS, this.progress);\n    this.calcOffsetTop();\n    this.clearCanvasAndSetGlobalAttrs(); // 调用 Wave 方法\n\n    this.renderMaskMode(function () {\n      _this.drawWaves();\n    }); // 调用 WaveLoading 方法\n\n    this.drawText();\n  };\n  /**\n   * 绘制进度文本\n   */\n\n\n  WaveLoading.prototype.drawText = function () {\n    var _a = this,\n        ctx = _a.ctx,\n        canvasWidth = _a.canvasWidth,\n        halfCH = _a.halfCH,\n        progress = _a.progress;\n\n    var _b = this.options,\n        font = _b.font,\n        textFormatter = _b.textFormatter,\n        textColor = _b.textColor;\n    if (!utils_1.isString(textFormatter) || !textFormatter) return; // 替换文本模板真实值\n\n    var text = textFormatter.replace(/%d/g, String(Math.floor(progress)));\n    ctx.save();\n    ctx.font = font;\n    var textWidth = ctx.measureText(text).width;\n    var x = (canvasWidth - textWidth) / 2;\n    ctx.textBaseline = 'middle';\n    ctx.fillStyle = textColor;\n    ctx.font = font;\n    ctx.fillText(text, x, halfCH);\n    ctx.restore();\n  };\n  /**\n   * 计算进度值\n   */\n\n\n  WaveLoading.prototype.calcProgress = function () {\n    // 立即完成逻辑，采用快速步进值计算进度\n    if (this.isCompletedImmediately) {\n      this.progress += this.fastStepValue;\n      this.fastStepValue += 0.5;\n      return;\n    } // 悬停 99% 时，跳出计算，减少性能损耗\n\n\n    if (this.progress >= WaveLoading.progressThreshold) return;\n\n    if (!this.startTime) {\n      this.startTime = Date.now();\n    } // x: percent complete      percent complete: elapsedTime / duration\n    // t: elapsed time          elapsed time: currentTime - startTime\n    // b: beginning value       start value\n    // c: change in value       finish value\n    // d: duration              duration\n\n\n    var time = Date.now() - this.startTime;\n    var percent = time / this.options.duration;\n\n    if (percent <= 1) {\n      this.progress = easing_1.default[this.options.easing]( // x, t, b, c, d\n      percent, time, 0, 100, this.options.duration); // 1、防止 progress 超出 100\n      // 2、通过 easing 函数返回的值可能悬停 99.7，加 0.9 让进度达到阈值\n\n      if (this.progress + 0.9 >= WaveLoading.progressThreshold) {\n        this.progress = WaveLoading.progressThreshold;\n      }\n    }\n  };\n  /**\n   * 根据进度计算波纹 offsetTop 值\n   */\n\n\n  WaveLoading.prototype.calcOffsetTop = function () {\n    // 退出以提高性能\n    if (!this.isCompletedImmediately && this.progress >= WaveLoading.progressThreshold) {\n      return;\n    }\n\n    var maxCrestHeight = Math.max.apply(Math, this.options.crestHeight);\n    var top = this.progress === 100 ? -maxCrestHeight : Math.ceil((100 - this.progress) / 100 * this.canvasHeight + maxCrestHeight);\n    this.setOffsetTop(top);\n  };\n  /**\n   * 窗口尺寸调整事件\n   */\n\n\n  WaveLoading.prototype.waveLoadingResizeEvent = function () {\n    var _this = this;\n\n    this.onResize(function () {\n      _this.halfCH = _this.canvasHeight / 2;\n\n      if (_this.progress === 100) {\n        _this.draw();\n      }\n    });\n  };\n  /**\n   * 方法：动态设置属性值\n   */\n\n\n  WaveLoading.prototype.setOptions = function (newOptions) {\n    if (!this.isRunningSupported || !utils_1.isPlainObject(newOptions)) return; // 调用 Wave 更新项\n\n    _super.prototype.setOptions.call(this, newOptions);\n\n    for (var property in newOptions) {\n      if (Object.hasOwnProperty.call(newOptions, property) && plainOptionsWL.indexOf(property) !== -1) {\n        var newValue = newOptions[property];\n        this.options[property] = newValue;\n\n        if (property === 'borderRadius') {\n          this.setCanvasStyle();\n        }\n      }\n    }\n  };\n  /**\n   * 方法：让进度立即加载完成\n   */\n\n\n  WaveLoading.prototype.done = function () {\n    if (this.isRunningSupported && !this.isCompletedImmediately) {\n      this.isCompletedImmediately = true;\n    }\n  };\n  /**\n   * 事件：进度每次改变的时候触发\n   */\n\n\n  WaveLoading.prototype.onProgress = function () {\n    var _a;\n\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    (_a = this.eventEmitter).on.apply(_a, __spreadArray([constants_1.EVENT_NAMES_WAVE_LOADING.PROGRESS], args));\n\n    return this;\n  };\n  /**\n   * 事件：进度加载到 100% 后触发\n   */\n\n\n  WaveLoading.prototype.onFinished = function () {\n    var _a;\n\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    (_a = this.eventEmitter).on.apply(_a, __spreadArray([constants_1.EVENT_NAMES_WAVE_LOADING.FINISHED], args));\n\n    return this;\n  };\n\n  WaveLoading.defaultConfig = {\n    num: 1,\n    // [font style][font weight][font size][font family]\n    // 文本样式，同css一样，必须包含 [font size] 和 [font family]\n    font: 'normal 400 16px Arial',\n    // 文本颜色\n    textColor: '#333',\n    // 进度文本模板\n    textFormatter: 'loading...%d%',\n    fill: true,\n    line: false,\n    // 填充的背景色\n    fillColor: '#27C9E5',\n    // 画布外边框圆角\n    borderRadius: '50%',\n    // 线条横向偏移值，距离canvas画布左边的偏移值\n    // (0, 1)表示容器宽度的倍数，0 & [1, +∞)表示具体数值\n    offsetLeft: 0,\n    // 波峰高度，(0, 1)表示容器高度的倍数，0 & [1, +∞)表示具体数值\n    crestHeight: 4,\n    // 波纹个数，即正弦周期个数\n    crestCount: 1,\n    // 波浪的运动速度\n    speed: 0.3,\n    // 加载到 99% 的时长，单位毫秒(ms)\n    // 用时越久，越慢加载到 99%。\n    duration: 5000,\n    // 加载过程的运动效果，\n    // 目前支持匀速(linear)，先加速再减速(swing)，两种\n    easing: 'swing'\n  }; // 进度阈值\n\n  WaveLoading.progressThreshold = 99.99;\n  return WaveLoading;\n}(wave_1.default);\n\nexports.default = WaveLoading;","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","__spreadArray","to","from","i","il","length","j","__importDefault","mod","__esModule","defineProperty","exports","value","constants_1","require","easing_1","utils_1","wave_1","plainOptionsWL","WaveLoading","_super","selector","options","_this","merge","defaultConfig","progress","isCompletedImmediately","fastStepValue","init","halfCH","canvasHeight","setOffsetTop","setCanvasStyle","ownResizeEvent","optionsNormalize","loadMaskImage","createDots","waveLoadingResizeEvent","top","offsetTop","isArray","forEach","_item","arr","canvas","style","borderRadius","draw","calcProgress","mainDrawing","requestAnimationFrame","eventEmitter","trigger","EVENT_NAMES_WAVE_LOADING","FINISHED","PROGRESS","calcOffsetTop","clearCanvasAndSetGlobalAttrs","renderMaskMode","drawWaves","drawText","_a","ctx","canvasWidth","_b","font","textFormatter","textColor","isString","text","replace","Math","floor","save","textWidth","measureText","width","x","textBaseline","fillStyle","fillText","restore","progressThreshold","startTime","Date","now","time","percent","duration","default","easing","maxCrestHeight","max","apply","crestHeight","ceil","onResize","setOptions","newOptions","isRunningSupported","isPlainObject","property","indexOf","newValue","done","onProgress","args","_i","arguments","on","onFinished","num","fill","line","fillColor","offsetLeft","crestCount","speed"],"sources":["/Users/roy/Desktop/drajm-site/node_modules/jparticles/lib/wave-loading.js"],"sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __spreadArray = (this && this.__spreadArray) || function (to, from) {\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\n        to[j] = from[i];\n    return to;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar constants_1 = require(\"./common/constants\");\nvar easing_1 = __importDefault(require(\"./common/easing\"));\nvar utils_1 = require(\"./utils/index\");\nvar wave_1 = __importDefault(require(\"./wave\"));\nvar plainOptionsWL = [\n    'font',\n    'textColor',\n    'textFormatter',\n    'borderRadius',\n];\nvar WaveLoading = /** @class */ (function (_super) {\n    __extends(WaveLoading, _super);\n    function WaveLoading(selector, options) {\n        var _this = _super.call(this, selector, utils_1.merge({}, WaveLoading.defaultConfig, options)) || this;\n        // 当前进度\n        _this.progress = 0;\n        // 是否立即完成\n        _this.isCompletedImmediately = false;\n        // 立即完成时的进度步进值\n        _this.fastStepValue = 1;\n        return _this;\n    }\n    /**\n     * 初始化数据和运行程序\n     */\n    WaveLoading.prototype.init = function () {\n        this.halfCH = this.canvasHeight / 2;\n        // WaveLoading methods\n        this.setOffsetTop(this.canvasHeight);\n        this.setCanvasStyle();\n        // Wave methods\n        this.ownResizeEvent();\n        this.optionsNormalize();\n        this.loadMaskImage();\n        this.createDots();\n        // WaveLoading resize 事件需要放到 Wave 的后面\n        this.waveLoadingResizeEvent();\n    };\n    /**\n     * 设置 offsetTop 值\n     * @param top 高度值\n     */\n    WaveLoading.prototype.setOffsetTop = function (top) {\n        var offsetTop = this.options.offsetTop;\n        if (Array.isArray(offsetTop)) {\n            offsetTop.forEach(function (_item, i, arr) {\n                arr[i] = top;\n            });\n        }\n        else {\n            this.options.offsetTop = top;\n        }\n    };\n    /**\n     * 设置画布 CSS 样式\n     */\n    WaveLoading.prototype.setCanvasStyle = function () {\n        this.canvas.style.borderRadius = this.options.borderRadius;\n    };\n    /**\n     * 绘制入口：计算进度，绘制波纹等\n     */\n    WaveLoading.prototype.draw = function () {\n        this.calcProgress();\n        if (this.progress < 100) {\n            this.mainDrawing();\n            this.requestAnimationFrame();\n        }\n        else {\n            this.progress = 100;\n            this.mainDrawing();\n            this.eventEmitter.trigger(constants_1.EVENT_NAMES_WAVE_LOADING.FINISHED);\n        }\n    };\n    /**\n     * 绘制图案\n     */\n    WaveLoading.prototype.mainDrawing = function () {\n        var _this = this;\n        this.eventEmitter.trigger(constants_1.EVENT_NAMES_WAVE_LOADING.PROGRESS, this.progress);\n        this.calcOffsetTop();\n        this.clearCanvasAndSetGlobalAttrs();\n        // 调用 Wave 方法\n        this.renderMaskMode(function () {\n            _this.drawWaves();\n        });\n        // 调用 WaveLoading 方法\n        this.drawText();\n    };\n    /**\n     * 绘制进度文本\n     */\n    WaveLoading.prototype.drawText = function () {\n        var _a = this, ctx = _a.ctx, canvasWidth = _a.canvasWidth, halfCH = _a.halfCH, progress = _a.progress;\n        var _b = this.options, font = _b.font, textFormatter = _b.textFormatter, textColor = _b.textColor;\n        if (!utils_1.isString(textFormatter) || !textFormatter)\n            return;\n        // 替换文本模板真实值\n        var text = textFormatter.replace(/%d/g, String(Math.floor(progress)));\n        ctx.save();\n        ctx.font = font;\n        var textWidth = ctx.measureText(text).width;\n        var x = (canvasWidth - textWidth) / 2;\n        ctx.textBaseline = 'middle';\n        ctx.fillStyle = textColor;\n        ctx.font = font;\n        ctx.fillText(text, x, halfCH);\n        ctx.restore();\n    };\n    /**\n     * 计算进度值\n     */\n    WaveLoading.prototype.calcProgress = function () {\n        // 立即完成逻辑，采用快速步进值计算进度\n        if (this.isCompletedImmediately) {\n            this.progress += this.fastStepValue;\n            this.fastStepValue += 0.5;\n            return;\n        }\n        // 悬停 99% 时，跳出计算，减少性能损耗\n        if (this.progress >= WaveLoading.progressThreshold)\n            return;\n        if (!this.startTime) {\n            this.startTime = Date.now();\n        }\n        // x: percent complete      percent complete: elapsedTime / duration\n        // t: elapsed time          elapsed time: currentTime - startTime\n        // b: beginning value       start value\n        // c: change in value       finish value\n        // d: duration              duration\n        var time = Date.now() - this.startTime;\n        var percent = time / this.options.duration;\n        if (percent <= 1) {\n            this.progress = easing_1.default[this.options.easing](\n            // x, t, b, c, d\n            percent, time, 0, 100, this.options.duration);\n            // 1、防止 progress 超出 100\n            // 2、通过 easing 函数返回的值可能悬停 99.7，加 0.9 让进度达到阈值\n            if (this.progress + 0.9 >= WaveLoading.progressThreshold) {\n                this.progress = WaveLoading.progressThreshold;\n            }\n        }\n    };\n    /**\n     * 根据进度计算波纹 offsetTop 值\n     */\n    WaveLoading.prototype.calcOffsetTop = function () {\n        // 退出以提高性能\n        if (!this.isCompletedImmediately &&\n            this.progress >= WaveLoading.progressThreshold) {\n            return;\n        }\n        var maxCrestHeight = Math.max.apply(Math, this.options.crestHeight);\n        var top = this.progress === 100\n            ? -maxCrestHeight\n            : Math.ceil(((100 - this.progress) / 100) * this.canvasHeight + maxCrestHeight);\n        this.setOffsetTop(top);\n    };\n    /**\n     * 窗口尺寸调整事件\n     */\n    WaveLoading.prototype.waveLoadingResizeEvent = function () {\n        var _this = this;\n        this.onResize(function () {\n            _this.halfCH = _this.canvasHeight / 2;\n            if (_this.progress === 100) {\n                _this.draw();\n            }\n        });\n    };\n    /**\n     * 方法：动态设置属性值\n     */\n    WaveLoading.prototype.setOptions = function (newOptions) {\n        if (!this.isRunningSupported || !utils_1.isPlainObject(newOptions))\n            return;\n        // 调用 Wave 更新项\n        _super.prototype.setOptions.call(this, newOptions);\n        for (var property in newOptions) {\n            if (Object.hasOwnProperty.call(newOptions, property) &&\n                plainOptionsWL.indexOf(property) !== -1) {\n                var newValue = newOptions[property];\n                this.options[property] = newValue;\n                if (property === 'borderRadius') {\n                    this.setCanvasStyle();\n                }\n            }\n        }\n    };\n    /**\n     * 方法：让进度立即加载完成\n     */\n    WaveLoading.prototype.done = function () {\n        if (this.isRunningSupported && !this.isCompletedImmediately) {\n            this.isCompletedImmediately = true;\n        }\n    };\n    /**\n     * 事件：进度每次改变的时候触发\n     */\n    WaveLoading.prototype.onProgress = function () {\n        var _a;\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        (_a = this.eventEmitter).on.apply(_a, __spreadArray([constants_1.EVENT_NAMES_WAVE_LOADING.PROGRESS], args));\n        return this;\n    };\n    /**\n     * 事件：进度加载到 100% 后触发\n     */\n    WaveLoading.prototype.onFinished = function () {\n        var _a;\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        (_a = this.eventEmitter).on.apply(_a, __spreadArray([constants_1.EVENT_NAMES_WAVE_LOADING.FINISHED], args));\n        return this;\n    };\n    WaveLoading.defaultConfig = {\n        num: 1,\n        // [font style][font weight][font size][font family]\n        // 文本样式，同css一样，必须包含 [font size] 和 [font family]\n        font: 'normal 400 16px Arial',\n        // 文本颜色\n        textColor: '#333',\n        // 进度文本模板\n        textFormatter: 'loading...%d%',\n        fill: true,\n        line: false,\n        // 填充的背景色\n        fillColor: '#27C9E5',\n        // 画布外边框圆角\n        borderRadius: '50%',\n        // 线条横向偏移值，距离canvas画布左边的偏移值\n        // (0, 1)表示容器宽度的倍数，0 & [1, +∞)表示具体数值\n        offsetLeft: 0,\n        // 波峰高度，(0, 1)表示容器高度的倍数，0 & [1, +∞)表示具体数值\n        crestHeight: 4,\n        // 波纹个数，即正弦周期个数\n        crestCount: 1,\n        // 波浪的运动速度\n        speed: 0.3,\n        // 加载到 99% 的时长，单位毫秒(ms)\n        // 用时越久，越慢加载到 99%。\n        duration: 5000,\n        // 加载过程的运动效果，\n        // 目前支持匀速(linear)，先加速再减速(swing)，两种\n        easing: 'swing',\n    };\n    // 进度阈值\n    WaveLoading.progressThreshold = 99.99;\n    return WaveLoading;\n}(wave_1.default));\nexports.default = WaveLoading;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}