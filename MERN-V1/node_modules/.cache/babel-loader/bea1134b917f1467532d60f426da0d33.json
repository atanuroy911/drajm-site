{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.upperFirst = exports.trimAll = exports.toFixed = exports.pInt = void 0;\n\nvar constants_1 = require(\"../common/constants\");\n/**\n * 包装原生 parseInt，确保输出十进制数值\n */\n\n\nfunction pInt(s, radix) {\n  if (radix === void 0) {\n    radix = 10;\n  }\n\n  return parseInt(s, radix);\n}\n\nexports.pInt = pInt;\n/**\n * 包装原生 toFixed，确保输出数字而不是字符串\n */\n\nfunction toFixed(num, digits) {\n  if (digits === void 0) {\n    digits = 0;\n  }\n\n  return parseFloat(Number(num).toFixed(digits));\n}\n\nexports.toFixed = toFixed;\n/**\n * 移除字符串内所有空白，包括空格、空行、制表符\n */\n\nfunction trimAll(str) {\n  return str.replace(constants_1.regExp.trimAll, '');\n}\n\nexports.trimAll = trimAll;\n/**\n * 将字符串首字母转换成大写\n */\n\nfunction upperFirst(str) {\n  return str[0].toUpperCase() + str.substring(1);\n}\n\nexports.upperFirst = upperFirst;","map":{"version":3,"names":["Object","defineProperty","exports","value","upperFirst","trimAll","toFixed","pInt","constants_1","require","s","radix","parseInt","num","digits","parseFloat","Number","str","replace","regExp","toUpperCase","substring"],"sources":["/Users/roy/Desktop/drajm-site/node_modules/jparticles/lib/utils/str-num.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.upperFirst = exports.trimAll = exports.toFixed = exports.pInt = void 0;\nvar constants_1 = require(\"../common/constants\");\n/**\n * 包装原生 parseInt，确保输出十进制数值\n */\nfunction pInt(s, radix) {\n    if (radix === void 0) { radix = 10; }\n    return parseInt(s, radix);\n}\nexports.pInt = pInt;\n/**\n * 包装原生 toFixed，确保输出数字而不是字符串\n */\nfunction toFixed(num, digits) {\n    if (digits === void 0) { digits = 0; }\n    return parseFloat(Number(num).toFixed(digits));\n}\nexports.toFixed = toFixed;\n/**\n * 移除字符串内所有空白，包括空格、空行、制表符\n */\nfunction trimAll(str) {\n    return str.replace(constants_1.regExp.trimAll, '');\n}\nexports.trimAll = trimAll;\n/**\n * 将字符串首字母转换成大写\n */\nfunction upperFirst(str) {\n    return str[0].toUpperCase() + str.substring(1);\n}\nexports.upperFirst = upperFirst;\n"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,UAAR,GAAqBF,OAAO,CAACG,OAAR,GAAkBH,OAAO,CAACI,OAAR,GAAkBJ,OAAO,CAACK,IAAR,GAAe,KAAK,CAA7E;;AACA,IAAIC,WAAW,GAAGC,OAAO,CAAC,qBAAD,CAAzB;AACA;AACA;AACA;;;AACA,SAASF,IAAT,CAAcG,CAAd,EAAiBC,KAAjB,EAAwB;EACpB,IAAIA,KAAK,KAAK,KAAK,CAAnB,EAAsB;IAAEA,KAAK,GAAG,EAAR;EAAa;;EACrC,OAAOC,QAAQ,CAACF,CAAD,EAAIC,KAAJ,CAAf;AACH;;AACDT,OAAO,CAACK,IAAR,GAAeA,IAAf;AACA;AACA;AACA;;AACA,SAASD,OAAT,CAAiBO,GAAjB,EAAsBC,MAAtB,EAA8B;EAC1B,IAAIA,MAAM,KAAK,KAAK,CAApB,EAAuB;IAAEA,MAAM,GAAG,CAAT;EAAa;;EACtC,OAAOC,UAAU,CAACC,MAAM,CAACH,GAAD,CAAN,CAAYP,OAAZ,CAAoBQ,MAApB,CAAD,CAAjB;AACH;;AACDZ,OAAO,CAACI,OAAR,GAAkBA,OAAlB;AACA;AACA;AACA;;AACA,SAASD,OAAT,CAAiBY,GAAjB,EAAsB;EAClB,OAAOA,GAAG,CAACC,OAAJ,CAAYV,WAAW,CAACW,MAAZ,CAAmBd,OAA/B,EAAwC,EAAxC,CAAP;AACH;;AACDH,OAAO,CAACG,OAAR,GAAkBA,OAAlB;AACA;AACA;AACA;;AACA,SAASD,UAAT,CAAoBa,GAApB,EAAyB;EACrB,OAAOA,GAAG,CAAC,CAAD,CAAH,CAAOG,WAAP,KAAuBH,GAAG,CAACI,SAAJ,CAAc,CAAd,CAA9B;AACH;;AACDnB,OAAO,CAACE,UAAR,GAAqBA,UAArB"},"metadata":{},"sourceType":"script"}