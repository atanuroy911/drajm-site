{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar constants_1 = require(\"./common/constants\");\n\nvar shape_1 = __importDefault(require(\"./common/shape\"));\n\nvar utils_1 = require(\"./utils/index\");\n\nvar Particle =\n/** @class */\nfunction (_super) {\n  __extends(Particle, _super);\n\n  function Particle(selector, options) {\n    var _this = _super.call(this, Particle.defaultConfig, selector, options) || this; // 鼠标坐标 X\n\n\n    _this.mouseX = 0; // 鼠标坐标 Y\n\n    _this.mouseY = 0;\n\n    _this.bootstrap();\n\n    return _this;\n  }\n  /**\n   * 初始化数据和运行程序\n   */\n\n\n  Particle.prototype.init = function () {\n    this.ownResizeEvent();\n    this.optionsNormalize();\n\n    if (this.options.range > 0) {\n      // 定位点坐标\n      this.positionX = Math.random() * this.canvasWidth;\n      this.positionY = Math.random() * this.canvasHeight;\n      this.defineLineShape();\n      this.positionEvent();\n    } // 初始化鼠标在视差上的坐标\n\n\n    this.mouseX = this.mouseY = 0;\n    this.parallaxEvent(); // 创建粒子\n\n    this.createDots();\n  };\n  /**\n   * 标准化配置参数，参考 calcQuantity 方法描述。\n   * 如:\n   *   num: 0.5  =>  表示 0.5 倍画布宽度  =>  标准化为具体数值，如 100\n   *   num: 100  =>  表示具体数值  => 标准化结果还是 100\n   */\n\n\n  Particle.prototype.optionsNormalize = function () {\n    var _a = this,\n        canvasWidth = _a.canvasWidth,\n        options = _a.options;\n\n    var props = ['num', 'proximity', 'range'];\n    props.forEach(function (prop) {\n      options[prop] = utils_1.pInt(utils_1.calcQuantity(options[prop], canvasWidth));\n    }); // 设置触发事件的元素\n\n    if (!utils_1.isElement(options.eventElem) && options.eventElem !== document) {\n      options.eventElem = this.canvas;\n    }\n  };\n  /**\n   * 根据配置参数生成对应形状的连线函数\n   */\n\n\n  Particle.prototype.defineLineShape = function () {\n    var _this = this;\n\n    var _a = this.options,\n        proximity = _a.proximity,\n        range = _a.range,\n        lineShape = _a.lineShape;\n\n    switch (lineShape) {\n      case 'cube':\n        this.lineShapeMaker = function (x, y, sx, sy, cb) {\n          var _a = _this,\n              positionX = _a.positionX,\n              positionY = _a.positionY;\n\n          if (Math.abs(x - sx) <= proximity && Math.abs(y - sy) <= proximity && Math.abs(x - positionX) <= range && Math.abs(y - positionY) <= range && Math.abs(sx - positionX) <= range && Math.abs(sy - positionY) <= range) {\n            cb();\n          }\n        };\n\n        break;\n\n      default:\n        this.lineShapeMaker = function (x, y, sx, sy, cb) {\n          var _a = _this,\n              positionX = _a.positionX,\n              positionY = _a.positionY;\n\n          if (Math.abs(x - sx) <= proximity && Math.abs(y - sy) <= proximity && (Math.abs(x - positionX) <= range && Math.abs(y - positionY) <= range || Math.abs(sx - positionX) <= range && Math.abs(sy - positionY) <= range)) {\n            cb();\n          }\n        };\n\n    }\n  };\n  /**\n   * 根据配置参数创建许多粒子（纯数据）\n   * 最后通过 draw 函数绘制真实可见的图形\n   */\n\n\n  Particle.prototype.createDots = function () {\n    var _a = this,\n        canvasWidth = _a.canvasWidth,\n        canvasHeight = _a.canvasHeight,\n        getColor = _a.getColor;\n\n    var _b = this.options,\n        maxR = _b.maxR,\n        minR = _b.minR,\n        maxSpeed = _b.maxSpeed,\n        minSpeed = _b.minSpeed,\n        parallaxLayer = _b.parallaxLayer;\n    var layerLength = parallaxLayer.length;\n    var num = this.options.num;\n\n    while (num--) {\n      var r = utils_1.randomInRange(maxR, minR);\n      this.elements.push({\n        r: r,\n        x: utils_1.randomInRange(canvasWidth - r, r),\n        y: utils_1.randomInRange(canvasHeight - r, r),\n        vx: utils_1.randomSpeed(maxSpeed, minSpeed),\n        vy: utils_1.randomSpeed(maxSpeed, minSpeed),\n        color: getColor(),\n        shape: this.getShapeData(),\n        // 定义粒子在视差图层里的层数及每层的层级大小\n        parallaxLayer: parallaxLayer[Math.floor(Math.random() * layerLength)],\n        // 定义粒子视差的偏移值\n        parallaxOffsetX: 0,\n        parallaxOffsetY: 0\n      });\n    }\n  };\n  /**\n   * 绘制粒子\n   */\n\n\n  Particle.prototype.draw = function () {\n    var _this = this;\n\n    var ctx = this.ctx;\n    var lineWidth = this.options.lineWidth;\n    this.clearCanvasAndSetGlobalAttrs(); // 当 canvas 宽高改变的时候，全局属性需要重新设置\n\n    ctx.lineWidth = lineWidth; // 更新粒子坐标\n\n    this.updateXY(); // 绘制粒子\n\n    this.elements.forEach(function (dot) {\n      var x = dot.x,\n          y = dot.y,\n          parallaxOffsetX = dot.parallaxOffsetX,\n          parallaxOffsetY = dot.parallaxOffsetY;\n\n      _this.drawShape(__assign(__assign({}, dot), {\n        x: x + parallaxOffsetX,\n        y: y + parallaxOffsetY\n      }));\n    }); // 连接粒子\n\n    this.connectDots(); // 循环绘制\n\n    this.requestAnimationFrame();\n  };\n  /**\n   * 连接粒子，绘制线段\n   */\n\n\n  Particle.prototype.connectDots = function () {\n    // 当连接范围小于 0 时，不连接线段\n    if (this.options.range <= 0) return;\n\n    var _a = this,\n        elements = _a.elements,\n        ctx = _a.ctx,\n        lineShapeMaker = _a.lineShapeMaker;\n\n    var length = elements.length;\n    elements.forEach(function (dot, i) {\n      var x = dot.x + dot.parallaxOffsetX;\n      var y = dot.y + dot.parallaxOffsetY;\n\n      var _loop_1 = function () {\n        var sibDot = elements[i];\n        var sx = sibDot.x + sibDot.parallaxOffsetX;\n        var sy = sibDot.y + sibDot.parallaxOffsetY;\n        lineShapeMaker === null || lineShapeMaker === void 0 ? void 0 : lineShapeMaker(x, y, sx, sy, function () {\n          ctx.save();\n          ctx.beginPath();\n          ctx.moveTo(x, y);\n          ctx.lineTo(sx, sy);\n          ctx.strokeStyle = dot.color;\n          ctx.stroke();\n          ctx.restore();\n        });\n      };\n\n      while (++i < length) {\n        _loop_1();\n      }\n    });\n  };\n  /**\n   * 更新粒子坐标\n   */\n\n\n  Particle.prototype.updateXY = function () {\n    var _a = this,\n        isPaused = _a.isPaused,\n        mouseX = _a.mouseX,\n        mouseY = _a.mouseY,\n        canvasWidth = _a.canvasWidth,\n        canvasHeight = _a.canvasHeight;\n\n    var _b = this.options,\n        parallax = _b.parallax,\n        parallaxStrength = _b.parallaxStrength; // 暂停的时候，vx 和 vy 保持不变，\n    // 防止自适应窗口变化时出现粒子移动\n\n    if (isPaused) return;\n    this.elements.forEach(function (dot) {\n      if (parallax) {\n        // https://github.com/jnicol/particleground/blob/master/jquery.particleground.js#L279-L282\n        var divisor = parallaxStrength * dot.parallaxLayer;\n        dot.parallaxOffsetX += (mouseX / divisor - dot.parallaxOffsetX) / 10;\n        dot.parallaxOffsetY += (mouseY / divisor - dot.parallaxOffsetY) / 10;\n      }\n\n      dot.x += dot.vx;\n      dot.y += dot.vy;\n      var r = dot.r,\n          parallaxOffsetX = dot.parallaxOffsetX,\n          parallaxOffsetY = dot.parallaxOffsetY;\n      var x = dot.x,\n          y = dot.y;\n      x += parallaxOffsetX;\n      y += parallaxOffsetY; // 自然碰撞反向，视差事件移动反向\n\n      if (x + r >= canvasWidth) {\n        dot.vx = -Math.abs(dot.vx);\n      } else if (x - r <= 0) {\n        dot.vx = Math.abs(dot.vx);\n      }\n\n      if (y + r >= canvasHeight) {\n        dot.vy = -Math.abs(dot.vy);\n      } else if (y - r <= 0) {\n        dot.vy = Math.abs(dot.vy);\n      }\n    });\n  };\n  /**\n   * 获取绑定的 DOM 元素（eventElem）的 offset 值\n   */\n\n\n  Particle.prototype.getEventElemOffset = function () {\n    var eventElem = this.options.eventElem;\n    return eventElem === document ? null : utils_1.offset(eventElem);\n  };\n  /**\n   * 事件代理\n   * @param move  移动事件处理函数\n   * @param orientation  陀螺仪事件处理函数\n   */\n\n\n  Particle.prototype.eventProxy = function (move, orientation) {\n    var _this = this;\n\n    var eventElem = this.options.eventElem;\n    var handleOrientation;\n\n    if (constants_1.orientationSupport) {\n      handleOrientation = function (e) {\n        if (_this.isPaused || utils_1.isNull(e.beta)) return; // 转换 beta 范围 [-180, 180] 成 [-90, 90]\n\n        orientation(Math.min(Math.max(e.beta, -90), 90), e.gamma);\n      };\n\n      window.addEventListener('deviceorientation', handleOrientation);\n    }\n\n    var handleMove = function (e) {\n      if (_this.isPaused) return;\n      var left = e.pageX;\n      var top = e.pageY;\n\n      var offset = _this.getEventElemOffset();\n\n      if (offset) {\n        left -= offset.left;\n        top -= offset.top;\n      }\n\n      move(left, top);\n    };\n\n    eventElem.addEventListener('mousemove', handleMove); // 实例销毁时移除绑定的事件\n\n    this.onDestroy(function () {\n      window.removeEventListener('deviceorientation', handleOrientation);\n      eventElem.removeEventListener('mousemove', handleMove);\n    });\n  };\n  /**\n   * 鼠标位置事件，根据鼠标的坐标将范围内的粒子连接起来\n   */\n\n\n  Particle.prototype.positionEvent = function () {\n    var _this = this;\n\n    var range = this.options.range; // 性能优化\n\n    if (range > this.canvasWidth && range > this.canvasHeight) return;\n    this.eventProxy( // 鼠标移动事件\n    function (left, top) {\n      _this.positionX = left;\n      _this.positionY = top;\n    }, // 陀螺仪事件\n    function (beta, gamma) {\n      _this.positionX = -(gamma - 90) / 180 * _this.canvasWidth;\n      _this.positionY = -(beta - 90) / 180 * _this.canvasHeight;\n    });\n  };\n  /**\n   * 视差效果事件\n   */\n\n\n  Particle.prototype.parallaxEvent = function () {\n    var _this = this;\n\n    if (!this.options.parallax) return;\n    this.eventProxy(function (left, top) {\n      _this.mouseX = left - _this.canvasWidth / 2;\n      _this.mouseY = top - _this.canvasHeight / 2;\n    }, function (beta, gamma) {\n      // 一半高度或宽度的对应比例值\n      // mouseX: - gamma / 90 * canvasWidth / 2;\n      // mouseY: - beta / 90 * canvasHeight / 2;\n      _this.mouseX = -gamma * _this.canvasWidth / 180;\n      _this.mouseY = -beta * _this.canvasHeight / 180;\n    });\n  };\n  /**\n   * 窗口尺寸调整事件\n   */\n\n\n  Particle.prototype.ownResizeEvent = function () {\n    var _this = this;\n\n    this.onResize(function (scaleX, scaleY) {\n      if (_this.options.range > 0) {\n        _this.positionX *= scaleX;\n        _this.positionY *= scaleY;\n        _this.mouseX *= scaleX;\n        _this.mouseY *= scaleY;\n      }\n    });\n  };\n\n  Particle.defaultConfig = {\n    // 粒子个数，默认为容器宽度的 0.12 倍\n    // (0, 1) 显示为容器宽度相应倍数的个数，0 & [1, +∞) 显示具体个数\n    // 0 是没有意义的\n    num: 0.12,\n    // 粒子最大半径(0, +∞)\n    maxR: 2.4,\n    // 粒子最小半径(0, +∞)\n    minR: 0.6,\n    // 粒子最大运动速度(0, +∞)\n    maxSpeed: 1,\n    // 粒子最小运动速度(0, +∞)\n    minSpeed: 0.1,\n    // 两点连线的最大值\n    // 在 range 范围内的两点距离小于 proximity，则两点之间连线\n    // (0, 1) 显示为容器宽度相应倍数的个数，0 & [1, +∞) 显示具体个数\n    proximity: 0.2,\n    // 定位点的范围，范围越大连线越多\n    // 当 range 等于 0 时，不连线，相关值无效\n    // (0, 1) 显示为容器宽度相应倍数的个数，0 & [1, +∞) 显示具体个数\n    range: 0.2,\n    // 线段的宽度\n    lineWidth: 0.2,\n    // 连线的形状\n    // spider: 散开的蜘蛛状\n    // cube: 合拢的立方体状\n    lineShape: 'spider',\n    // 改变定位点坐标的事件元素\n    // null 表示 canvas 画布，或传入原生元素对象，如 document 等\n    eventElem: null,\n    // 视差效果 {boolean}\n    parallax: false,\n    // 定义粒子在视差图层里的层数及每层的层级大小，类似 css 里的 z-index。\n    // 取值范围: [0, +∞)，值越小视差效果越强烈，0 则不动。\n    // 定义四层粒子示例：[1, 3, 5, 10]\n    parallaxLayer: [1, 2, 3],\n    // 视差强度，值越小视差效果越强烈\n    parallaxStrength: 3\n  };\n  return Particle;\n}(shape_1.default);\n\nexports.default = Particle;","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","__assign","assign","t","s","i","n","arguments","length","apply","__importDefault","mod","__esModule","defineProperty","exports","value","constants_1","require","shape_1","utils_1","Particle","_super","selector","options","_this","defaultConfig","mouseX","mouseY","bootstrap","init","ownResizeEvent","optionsNormalize","range","positionX","Math","random","canvasWidth","positionY","canvasHeight","defineLineShape","positionEvent","parallaxEvent","createDots","_a","props","forEach","prop","pInt","calcQuantity","isElement","eventElem","document","canvas","proximity","lineShape","lineShapeMaker","x","y","sx","sy","cb","abs","getColor","_b","maxR","minR","maxSpeed","minSpeed","parallaxLayer","layerLength","num","r","randomInRange","elements","push","vx","randomSpeed","vy","color","shape","getShapeData","floor","parallaxOffsetX","parallaxOffsetY","draw","ctx","lineWidth","clearCanvasAndSetGlobalAttrs","updateXY","dot","drawShape","connectDots","requestAnimationFrame","_loop_1","sibDot","save","beginPath","moveTo","lineTo","strokeStyle","stroke","restore","isPaused","parallax","parallaxStrength","divisor","getEventElemOffset","offset","eventProxy","move","orientation","handleOrientation","orientationSupport","e","isNull","beta","min","max","gamma","window","addEventListener","handleMove","left","pageX","top","pageY","onDestroy","removeEventListener","onResize","scaleX","scaleY","default"],"sources":["/Users/roy/Desktop/drajm-site/node_modules/jparticles/lib/particle.js"],"sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar constants_1 = require(\"./common/constants\");\nvar shape_1 = __importDefault(require(\"./common/shape\"));\nvar utils_1 = require(\"./utils/index\");\nvar Particle = /** @class */ (function (_super) {\n    __extends(Particle, _super);\n    function Particle(selector, options) {\n        var _this = _super.call(this, Particle.defaultConfig, selector, options) || this;\n        // 鼠标坐标 X\n        _this.mouseX = 0;\n        // 鼠标坐标 Y\n        _this.mouseY = 0;\n        _this.bootstrap();\n        return _this;\n    }\n    /**\n     * 初始化数据和运行程序\n     */\n    Particle.prototype.init = function () {\n        this.ownResizeEvent();\n        this.optionsNormalize();\n        if (this.options.range > 0) {\n            // 定位点坐标\n            this.positionX = Math.random() * this.canvasWidth;\n            this.positionY = Math.random() * this.canvasHeight;\n            this.defineLineShape();\n            this.positionEvent();\n        }\n        // 初始化鼠标在视差上的坐标\n        this.mouseX = this.mouseY = 0;\n        this.parallaxEvent();\n        // 创建粒子\n        this.createDots();\n    };\n    /**\n     * 标准化配置参数，参考 calcQuantity 方法描述。\n     * 如:\n     *   num: 0.5  =>  表示 0.5 倍画布宽度  =>  标准化为具体数值，如 100\n     *   num: 100  =>  表示具体数值  => 标准化结果还是 100\n     */\n    Particle.prototype.optionsNormalize = function () {\n        var _a = this, canvasWidth = _a.canvasWidth, options = _a.options;\n        var props = ['num', 'proximity', 'range'];\n        props.forEach(function (prop) {\n            options[prop] = utils_1.pInt(utils_1.calcQuantity(options[prop], canvasWidth));\n        });\n        // 设置触发事件的元素\n        if (!utils_1.isElement(options.eventElem) && options.eventElem !== document) {\n            options.eventElem = this.canvas;\n        }\n    };\n    /**\n     * 根据配置参数生成对应形状的连线函数\n     */\n    Particle.prototype.defineLineShape = function () {\n        var _this = this;\n        var _a = this.options, proximity = _a.proximity, range = _a.range, lineShape = _a.lineShape;\n        switch (lineShape) {\n            case 'cube':\n                this.lineShapeMaker = function (x, y, sx, sy, cb) {\n                    var _a = _this, positionX = _a.positionX, positionY = _a.positionY;\n                    if (Math.abs(x - sx) <= proximity &&\n                        Math.abs(y - sy) <= proximity &&\n                        Math.abs(x - positionX) <= range &&\n                        Math.abs(y - positionY) <= range &&\n                        Math.abs(sx - positionX) <= range &&\n                        Math.abs(sy - positionY) <= range) {\n                        cb();\n                    }\n                };\n                break;\n            default:\n                this.lineShapeMaker = function (x, y, sx, sy, cb) {\n                    var _a = _this, positionX = _a.positionX, positionY = _a.positionY;\n                    if (Math.abs(x - sx) <= proximity &&\n                        Math.abs(y - sy) <= proximity &&\n                        ((Math.abs(x - positionX) <= range &&\n                            Math.abs(y - positionY) <= range) ||\n                            (Math.abs(sx - positionX) <= range &&\n                                Math.abs(sy - positionY) <= range))) {\n                        cb();\n                    }\n                };\n        }\n    };\n    /**\n     * 根据配置参数创建许多粒子（纯数据）\n     * 最后通过 draw 函数绘制真实可见的图形\n     */\n    Particle.prototype.createDots = function () {\n        var _a = this, canvasWidth = _a.canvasWidth, canvasHeight = _a.canvasHeight, getColor = _a.getColor;\n        var _b = this.options, maxR = _b.maxR, minR = _b.minR, maxSpeed = _b.maxSpeed, minSpeed = _b.minSpeed, parallaxLayer = _b.parallaxLayer;\n        var layerLength = parallaxLayer.length;\n        var num = this.options.num;\n        while (num--) {\n            var r = utils_1.randomInRange(maxR, minR);\n            this.elements.push({\n                r: r,\n                x: utils_1.randomInRange(canvasWidth - r, r),\n                y: utils_1.randomInRange(canvasHeight - r, r),\n                vx: utils_1.randomSpeed(maxSpeed, minSpeed),\n                vy: utils_1.randomSpeed(maxSpeed, minSpeed),\n                color: getColor(),\n                shape: this.getShapeData(),\n                // 定义粒子在视差图层里的层数及每层的层级大小\n                parallaxLayer: parallaxLayer[Math.floor(Math.random() * layerLength)],\n                // 定义粒子视差的偏移值\n                parallaxOffsetX: 0,\n                parallaxOffsetY: 0,\n            });\n        }\n    };\n    /**\n     * 绘制粒子\n     */\n    Particle.prototype.draw = function () {\n        var _this = this;\n        var ctx = this.ctx;\n        var lineWidth = this.options.lineWidth;\n        this.clearCanvasAndSetGlobalAttrs();\n        // 当 canvas 宽高改变的时候，全局属性需要重新设置\n        ctx.lineWidth = lineWidth;\n        // 更新粒子坐标\n        this.updateXY();\n        // 绘制粒子\n        this.elements.forEach(function (dot) {\n            var x = dot.x, y = dot.y, parallaxOffsetX = dot.parallaxOffsetX, parallaxOffsetY = dot.parallaxOffsetY;\n            _this.drawShape(__assign(__assign({}, dot), { x: x + parallaxOffsetX, y: y + parallaxOffsetY }));\n        });\n        // 连接粒子\n        this.connectDots();\n        // 循环绘制\n        this.requestAnimationFrame();\n    };\n    /**\n     * 连接粒子，绘制线段\n     */\n    Particle.prototype.connectDots = function () {\n        // 当连接范围小于 0 时，不连接线段\n        if (this.options.range <= 0)\n            return;\n        var _a = this, elements = _a.elements, ctx = _a.ctx, lineShapeMaker = _a.lineShapeMaker;\n        var length = elements.length;\n        elements.forEach(function (dot, i) {\n            var x = dot.x + dot.parallaxOffsetX;\n            var y = dot.y + dot.parallaxOffsetY;\n            var _loop_1 = function () {\n                var sibDot = elements[i];\n                var sx = sibDot.x + sibDot.parallaxOffsetX;\n                var sy = sibDot.y + sibDot.parallaxOffsetY;\n                lineShapeMaker === null || lineShapeMaker === void 0 ? void 0 : lineShapeMaker(x, y, sx, sy, function () {\n                    ctx.save();\n                    ctx.beginPath();\n                    ctx.moveTo(x, y);\n                    ctx.lineTo(sx, sy);\n                    ctx.strokeStyle = dot.color;\n                    ctx.stroke();\n                    ctx.restore();\n                });\n            };\n            while (++i < length) {\n                _loop_1();\n            }\n        });\n    };\n    /**\n     * 更新粒子坐标\n     */\n    Particle.prototype.updateXY = function () {\n        var _a = this, isPaused = _a.isPaused, mouseX = _a.mouseX, mouseY = _a.mouseY, canvasWidth = _a.canvasWidth, canvasHeight = _a.canvasHeight;\n        var _b = this.options, parallax = _b.parallax, parallaxStrength = _b.parallaxStrength;\n        // 暂停的时候，vx 和 vy 保持不变，\n        // 防止自适应窗口变化时出现粒子移动\n        if (isPaused)\n            return;\n        this.elements.forEach(function (dot) {\n            if (parallax) {\n                // https://github.com/jnicol/particleground/blob/master/jquery.particleground.js#L279-L282\n                var divisor = parallaxStrength * dot.parallaxLayer;\n                dot.parallaxOffsetX += (mouseX / divisor - dot.parallaxOffsetX) / 10;\n                dot.parallaxOffsetY += (mouseY / divisor - dot.parallaxOffsetY) / 10;\n            }\n            dot.x += dot.vx;\n            dot.y += dot.vy;\n            var r = dot.r, parallaxOffsetX = dot.parallaxOffsetX, parallaxOffsetY = dot.parallaxOffsetY;\n            var x = dot.x, y = dot.y;\n            x += parallaxOffsetX;\n            y += parallaxOffsetY;\n            // 自然碰撞反向，视差事件移动反向\n            if (x + r >= canvasWidth) {\n                dot.vx = -Math.abs(dot.vx);\n            }\n            else if (x - r <= 0) {\n                dot.vx = Math.abs(dot.vx);\n            }\n            if (y + r >= canvasHeight) {\n                dot.vy = -Math.abs(dot.vy);\n            }\n            else if (y - r <= 0) {\n                dot.vy = Math.abs(dot.vy);\n            }\n        });\n    };\n    /**\n     * 获取绑定的 DOM 元素（eventElem）的 offset 值\n     */\n    Particle.prototype.getEventElemOffset = function () {\n        var eventElem = this.options.eventElem;\n        return eventElem === document ? null : utils_1.offset(eventElem);\n    };\n    /**\n     * 事件代理\n     * @param move  移动事件处理函数\n     * @param orientation  陀螺仪事件处理函数\n     */\n    Particle.prototype.eventProxy = function (move, orientation) {\n        var _this = this;\n        var eventElem = this.options.eventElem;\n        var handleOrientation;\n        if (constants_1.orientationSupport) {\n            handleOrientation = function (e) {\n                if (_this.isPaused || utils_1.isNull(e.beta))\n                    return;\n                // 转换 beta 范围 [-180, 180] 成 [-90, 90]\n                orientation(Math.min(Math.max(e.beta, -90), 90), e.gamma);\n            };\n            window.addEventListener('deviceorientation', handleOrientation);\n        }\n        var handleMove = function (e) {\n            if (_this.isPaused)\n                return;\n            var left = e.pageX;\n            var top = e.pageY;\n            var offset = _this.getEventElemOffset();\n            if (offset) {\n                left -= offset.left;\n                top -= offset.top;\n            }\n            move(left, top);\n        };\n        eventElem.addEventListener('mousemove', handleMove);\n        // 实例销毁时移除绑定的事件\n        this.onDestroy(function () {\n            window.removeEventListener('deviceorientation', handleOrientation);\n            eventElem.removeEventListener('mousemove', handleMove);\n        });\n    };\n    /**\n     * 鼠标位置事件，根据鼠标的坐标将范围内的粒子连接起来\n     */\n    Particle.prototype.positionEvent = function () {\n        var _this = this;\n        var range = this.options.range;\n        // 性能优化\n        if (range > this.canvasWidth && range > this.canvasHeight)\n            return;\n        this.eventProxy(\n        // 鼠标移动事件\n        function (left, top) {\n            _this.positionX = left;\n            _this.positionY = top;\n        }, \n        // 陀螺仪事件\n        function (beta, gamma) {\n            _this.positionX = (-(gamma - 90) / 180) * _this.canvasWidth;\n            _this.positionY = (-(beta - 90) / 180) * _this.canvasHeight;\n        });\n    };\n    /**\n     * 视差效果事件\n     */\n    Particle.prototype.parallaxEvent = function () {\n        var _this = this;\n        if (!this.options.parallax)\n            return;\n        this.eventProxy(function (left, top) {\n            _this.mouseX = left - _this.canvasWidth / 2;\n            _this.mouseY = top - _this.canvasHeight / 2;\n        }, function (beta, gamma) {\n            // 一半高度或宽度的对应比例值\n            // mouseX: - gamma / 90 * canvasWidth / 2;\n            // mouseY: - beta / 90 * canvasHeight / 2;\n            _this.mouseX = (-gamma * _this.canvasWidth) / 180;\n            _this.mouseY = (-beta * _this.canvasHeight) / 180;\n        });\n    };\n    /**\n     * 窗口尺寸调整事件\n     */\n    Particle.prototype.ownResizeEvent = function () {\n        var _this = this;\n        this.onResize(function (scaleX, scaleY) {\n            if (_this.options.range > 0) {\n                _this.positionX *= scaleX;\n                _this.positionY *= scaleY;\n                _this.mouseX *= scaleX;\n                _this.mouseY *= scaleY;\n            }\n        });\n    };\n    Particle.defaultConfig = {\n        // 粒子个数，默认为容器宽度的 0.12 倍\n        // (0, 1) 显示为容器宽度相应倍数的个数，0 & [1, +∞) 显示具体个数\n        // 0 是没有意义的\n        num: 0.12,\n        // 粒子最大半径(0, +∞)\n        maxR: 2.4,\n        // 粒子最小半径(0, +∞)\n        minR: 0.6,\n        // 粒子最大运动速度(0, +∞)\n        maxSpeed: 1,\n        // 粒子最小运动速度(0, +∞)\n        minSpeed: 0.1,\n        // 两点连线的最大值\n        // 在 range 范围内的两点距离小于 proximity，则两点之间连线\n        // (0, 1) 显示为容器宽度相应倍数的个数，0 & [1, +∞) 显示具体个数\n        proximity: 0.2,\n        // 定位点的范围，范围越大连线越多\n        // 当 range 等于 0 时，不连线，相关值无效\n        // (0, 1) 显示为容器宽度相应倍数的个数，0 & [1, +∞) 显示具体个数\n        range: 0.2,\n        // 线段的宽度\n        lineWidth: 0.2,\n        // 连线的形状\n        // spider: 散开的蜘蛛状\n        // cube: 合拢的立方体状\n        lineShape: 'spider',\n        // 改变定位点坐标的事件元素\n        // null 表示 canvas 画布，或传入原生元素对象，如 document 等\n        eventElem: null,\n        // 视差效果 {boolean}\n        parallax: false,\n        // 定义粒子在视差图层里的层数及每层的层级大小，类似 css 里的 z-index。\n        // 取值范围: [0, +∞)，值越小视差效果越强烈，0 则不动。\n        // 定义四层粒子示例：[1, 3, 5, 10]\n        parallaxLayer: [1, 2, 3],\n        // 视差强度，值越小视差效果越强烈\n        parallaxStrength: 3,\n    };\n    return Particle;\n}(shape_1.default));\nexports.default = Particle;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}