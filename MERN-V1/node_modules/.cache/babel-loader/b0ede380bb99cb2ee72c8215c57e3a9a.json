{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __spreadArray = this && this.__spreadArray || function (to, from) {\n  for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) to[j] = from[i];\n\n  return to;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar constants_1 = require(\"./common/constants\");\n\nvar mask_1 = __importDefault(require(\"./common/mask\"));\n\nvar utils_1 = require(\"./utils/index\"); // 动态更新选项：复杂类型（合并赋值）\n\n\nvar complexOptions = ['fill', 'fillColor', 'line', 'lineColor', 'lineWidth', 'offsetLeft', 'offsetTop', 'crestHeight', 'speed']; // 动态更新选项：简单类型（直接赋值）\n\nvar plainOptions = ['opacity', 'mask', 'maskMode'];\n\nvar stdProperties = __spreadArray(__spreadArray([], complexOptions), ['crestCount']);\n\nvar Wave =\n/** @class */\nfunction (_super) {\n  __extends(Wave, _super);\n\n  function Wave(selector, options) {\n    var _this = _super.call(this, Wave.defaultConfig, selector, options) || this; // 波长，每个周期(2π)在 Canvas 上的实际长度\n\n\n    _this.waveLength = [];\n\n    _this.bootstrap();\n\n    return _this;\n  }\n  /**\n   * 初始化数据和运行程序\n   */\n\n\n  Wave.prototype.init = function () {\n    this.ownResizeEvent();\n    this.optionsNormalize();\n    this.loadMaskImage();\n    this.createDots();\n  };\n  /**\n   * 标准化配置项\n   */\n\n\n  Wave.prototype.optionsNormalize = function () {\n    var _this = this;\n\n    stdProperties.forEach(function (property) {\n      var num = _this.options.num; // 选项原始值\n\n      var rawValue = _this.options[property]; // 选项标准值\n\n      var stdValue = []; // 比例范围\n\n      var scaleRange = property === 'offsetLeft' ? _this.canvasWidth : _this.canvasHeight; // 将数组、字符串、数字、布尔类型等属性标准化，利于内部代码编写\n      //\n      // 例如 num = 3 时，\n      //   crestHeight: 2或[]或[2]或[2, 2], 将标准化成: [2, 2, 2]\n      //   crestHeight: 没有传值时则使用默认值，将标准化成: [x, x, x], x表示默认值\n\n      while (num--) {\n        var value = Array.isArray(rawValue) ? rawValue[num] : rawValue;\n        stdValue[num] = utils_1.isUndefined(value) ? _this.getOptionDefaultValue(property) : Wave.getOptionProcessedValue(property, value, scaleRange);\n\n        if (property === 'crestCount') {\n          _this.waveLength[num] = _this.canvasWidth / stdValue[num];\n        }\n      }\n\n      _this.options[property] = stdValue;\n    });\n  };\n  /**\n   * 配置项缺省情况下对应的默认值\n   * @param property 配置项属性\n   */\n\n\n  Wave.prototype.getOptionDefaultValue = function (property) {\n    var _a = this,\n        canvasWidth = _a.canvasWidth,\n        canvasHeight = _a.canvasHeight;\n\n    switch (property) {\n      case 'lineColor':\n      case 'fillColor':\n        return utils_1.randomColor();\n\n      case 'lineWidth':\n        return utils_1.randomInRange(2, 0.2);\n\n      case 'offsetLeft':\n        return Math.random() * canvasWidth;\n\n      case 'offsetTop':\n      case 'crestHeight':\n        return Math.random() * canvasHeight;\n\n      case 'crestCount':\n        return utils_1.randomInRange(canvasWidth / 2, 1);\n\n      case 'speed':\n        return utils_1.randomInRange(0.4, 0.1);\n\n      case 'fill':\n        return false;\n\n      case 'line':\n        return true;\n    }\n  };\n  /**\n   * 获取配置项计算数值\n   * @param property 属性\n   * @param value 原始值\n   * @param range 范围值\n   */\n\n\n  Wave.getOptionProcessedValue = function (property, value, range) {\n    if (property === 'offsetTop' || property === 'offsetLeft' || property === 'crestHeight') {\n      return utils_1.calcQuantity(value, range);\n    }\n\n    return value;\n  };\n  /**\n   * 创建波浪线条像素点\n   */\n\n\n  Wave.prototype.createDots = function () {\n    var _a = this,\n        canvasWidth = _a.canvasWidth,\n        waveLength = _a.waveLength;\n\n    var num = this.options.num;\n\n    while (num--) {\n      var line = []; // 点的 y 轴步进\n\n      var step = constants_1.doublePi / waveLength[num]; // 创建一条线段所需的点\n\n      for (var i = 0; i <= canvasWidth; i++) {\n        line.push({\n          x: i,\n          y: i * step\n        });\n      }\n\n      this.elements[num] = line;\n    }\n  };\n  /**\n   * 绘图\n   */\n\n\n  Wave.prototype.draw = function () {\n    var _this = this;\n\n    this.clearCanvasAndSetGlobalAttrs();\n    this.renderMaskMode(function () {\n      _this.drawWaves();\n    });\n    this.requestAnimationFrame();\n  };\n  /**\n   * 绘制波浪效果\n   */\n\n\n  Wave.prototype.drawWaves = function () {\n    var _a = this,\n        ctx = _a.ctx,\n        canvasWidth = _a.canvasWidth,\n        canvasHeight = _a.canvasHeight,\n        isPaused = _a.isPaused;\n\n    var options = this.options;\n    this.elements.forEach(function (lines, i) {\n      var crestHeight = options.crestHeight[i];\n      var offsetLeft = options.offsetLeft[i];\n      var offsetTop = options.offsetTop[i];\n      var speed = options.speed[i];\n      ctx.save();\n      ctx.beginPath();\n      lines.forEach(function (dot, j) {\n        ctx[j ? 'lineTo' : 'moveTo'](dot.x, // y = A sin ( ωx + φ ) + h\n        crestHeight * Math.sin(dot.y + offsetLeft) + offsetTop);\n        !isPaused && (dot.y -= speed);\n      }); // 填充\n\n      if (options.fill[i]) {\n        ctx.lineTo(canvasWidth, canvasHeight);\n        ctx.lineTo(0, canvasHeight);\n        ctx.closePath();\n        ctx.fillStyle = options.fillColor[i];\n        ctx.fill();\n      } // 绘制线条边框\n\n\n      if (options.line[i]) {\n        ctx.lineWidth = options.lineWidth[i];\n        ctx.strokeStyle = options.lineColor[i];\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    });\n  };\n  /**\n   * 窗口尺寸调整事件\n   */\n\n\n  Wave.prototype.ownResizeEvent = function () {\n    var _this = this;\n\n    var props = ['offsetLeft', 'offsetTop', 'crestHeight'];\n    var options = this.options;\n    this.onResize(function (scaleX, scaleY) {\n      // 调整选项缩放后的值\n      props.forEach(function (prop) {\n        var scale = prop === 'offsetLeft' ? scaleX : scaleY;\n        options[prop].forEach(function (value, i, array) {\n          array[i] = value * scale;\n        });\n      }); // 调整点的坐标\n\n      _this.elements.forEach(function (lines) {\n        lines.forEach(function (dot) {\n          dot.x *= scaleX;\n          dot.y *= scaleY;\n        });\n      });\n    });\n  };\n  /**\n   * 更新复杂选项值（合并赋值）\n   * @param property 选项属性\n   * @param newValue 新值\n   */\n\n\n  Wave.prototype.updateComplexOptions = function (property, newValue) {\n    if (!newValue) return;\n    var scaleRange = property === 'offsetLeft' ? this.canvasWidth : this.canvasHeight;\n    var options = this.options;\n    var isArrayType = Array.isArray(newValue);\n    options[property].forEach(function (curValue, i, array) {\n      var value = isArrayType ? newValue[i] : newValue;\n      value = Wave.getOptionProcessedValue(property, value, scaleRange); // 未定义部分保持原有值\n\n      if (utils_1.isUndefined(value)) {\n        value = curValue;\n      }\n\n      array[i] = value;\n    });\n  };\n  /**\n   * 更新简单选项值（直接赋值）\n   * @param property 选项属性\n   * @param newValue 新值\n   */\n\n\n  Wave.prototype.updatePlainOptions = function (option, newValue) {\n    this.options[option] = newValue;\n\n    if (option === 'mask') {\n      this.loadMaskImage();\n    }\n  };\n  /**\n   * 动态设置 options 选项值\n   */\n\n\n  Wave.prototype.setOptions = function (newOptions) {\n    if (!this.isRunningSupported || !utils_1.isPlainObject(newOptions)) return;\n\n    for (var property in newOptions) {\n      if (Object.hasOwnProperty.call(newOptions, property)) {\n        if (plainOptions.indexOf(property) !== -1) {\n          this.updatePlainOptions(property, newOptions[property]);\n        } else if (complexOptions.indexOf(property) !== -1) {\n          this.updateComplexOptions(property, newOptions[property]);\n        }\n      }\n    }\n  };\n\n  Wave.defaultConfig = {\n    // 波纹个数\n    num: 3,\n    // 是否填充背景色，设置为 false 相关值无效\n    fill: false,\n    // 填充的背景色，当 fill 设置为 true 时生效\n    fillColor: [],\n    // 是否绘制边框，设置为 false 相关值无效\n    line: true,\n    // 边框颜色，当 line 设置为 true 时生效，下同\n    lineColor: [],\n    // 边框宽度，空数组则随机 [.2, 2) 的宽度。\n    lineWidth: [],\n    // 波纹横向偏移值，距离 Canvas 左边缘的偏移值\n    // (0, 1) 表示容器宽度的倍数，0 & [1, +∞) 表示具体数值\n    offsetLeft: [],\n    // 波纹纵向偏移值，波纹中点距离 Canvas 顶部的距离\n    // (0, 1) 表示容器高度的倍数，0 & [1, +∞) 表示具体数值\n    offsetTop: [],\n    // 波峰高度，(0, 1) 表示容器高度的倍数，0 & [1, +∞) 表示具体数值\n    crestHeight: [],\n    // 波峰个数，即正弦周期个数，默认随机 [1, 0.2 * 容器宽度)\n    crestCount: [],\n    // 运动速度，默认随机 [.1, .4)\n    speed: []\n  };\n  return Wave;\n}(mask_1.default);\n\nexports.default = Wave;","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","__spreadArray","to","from","i","il","length","j","__importDefault","mod","__esModule","defineProperty","exports","value","constants_1","require","mask_1","utils_1","complexOptions","plainOptions","stdProperties","Wave","_super","selector","options","_this","defaultConfig","waveLength","bootstrap","init","ownResizeEvent","optionsNormalize","loadMaskImage","createDots","forEach","property","num","rawValue","stdValue","scaleRange","canvasWidth","canvasHeight","isArray","isUndefined","getOptionDefaultValue","getOptionProcessedValue","_a","randomColor","randomInRange","Math","random","range","calcQuantity","line","step","doublePi","push","x","y","elements","draw","clearCanvasAndSetGlobalAttrs","renderMaskMode","drawWaves","requestAnimationFrame","ctx","isPaused","lines","crestHeight","offsetLeft","offsetTop","speed","save","beginPath","dot","sin","fill","lineTo","closePath","fillStyle","fillColor","lineWidth","strokeStyle","lineColor","stroke","restore","props","onResize","scaleX","scaleY","prop","scale","array","updateComplexOptions","newValue","isArrayType","curValue","updatePlainOptions","option","setOptions","newOptions","isRunningSupported","isPlainObject","indexOf","crestCount","default"],"sources":["/Users/roy/Desktop/drajm-site/node_modules/jparticles/lib/wave.js"],"sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __spreadArray = (this && this.__spreadArray) || function (to, from) {\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\n        to[j] = from[i];\n    return to;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar constants_1 = require(\"./common/constants\");\nvar mask_1 = __importDefault(require(\"./common/mask\"));\nvar utils_1 = require(\"./utils/index\");\n// 动态更新选项：复杂类型（合并赋值）\nvar complexOptions = [\n    'fill',\n    'fillColor',\n    'line',\n    'lineColor',\n    'lineWidth',\n    'offsetLeft',\n    'offsetTop',\n    'crestHeight',\n    'speed',\n];\n// 动态更新选项：简单类型（直接赋值）\nvar plainOptions = ['opacity', 'mask', 'maskMode'];\nvar stdProperties = __spreadArray(__spreadArray([], complexOptions), ['crestCount']);\nvar Wave = /** @class */ (function (_super) {\n    __extends(Wave, _super);\n    function Wave(selector, options) {\n        var _this = _super.call(this, Wave.defaultConfig, selector, options) || this;\n        // 波长，每个周期(2π)在 Canvas 上的实际长度\n        _this.waveLength = [];\n        _this.bootstrap();\n        return _this;\n    }\n    /**\n     * 初始化数据和运行程序\n     */\n    Wave.prototype.init = function () {\n        this.ownResizeEvent();\n        this.optionsNormalize();\n        this.loadMaskImage();\n        this.createDots();\n    };\n    /**\n     * 标准化配置项\n     */\n    Wave.prototype.optionsNormalize = function () {\n        var _this = this;\n        stdProperties.forEach(function (property) {\n            var num = _this.options.num;\n            // 选项原始值\n            var rawValue = _this.options[property];\n            // 选项标准值\n            var stdValue = [];\n            // 比例范围\n            var scaleRange = property === 'offsetLeft' ? _this.canvasWidth : _this.canvasHeight;\n            // 将数组、字符串、数字、布尔类型等属性标准化，利于内部代码编写\n            //\n            // 例如 num = 3 时，\n            //   crestHeight: 2或[]或[2]或[2, 2], 将标准化成: [2, 2, 2]\n            //   crestHeight: 没有传值时则使用默认值，将标准化成: [x, x, x], x表示默认值\n            while (num--) {\n                var value = Array.isArray(rawValue) ? rawValue[num] : rawValue;\n                stdValue[num] = utils_1.isUndefined(value)\n                    ? _this.getOptionDefaultValue(property)\n                    : Wave.getOptionProcessedValue(property, value, scaleRange);\n                if (property === 'crestCount') {\n                    _this.waveLength[num] = _this.canvasWidth / stdValue[num];\n                }\n            }\n            _this.options[property] = stdValue;\n        });\n    };\n    /**\n     * 配置项缺省情况下对应的默认值\n     * @param property 配置项属性\n     */\n    Wave.prototype.getOptionDefaultValue = function (property) {\n        var _a = this, canvasWidth = _a.canvasWidth, canvasHeight = _a.canvasHeight;\n        switch (property) {\n            case 'lineColor':\n            case 'fillColor':\n                return utils_1.randomColor();\n            case 'lineWidth':\n                return utils_1.randomInRange(2, 0.2);\n            case 'offsetLeft':\n                return Math.random() * canvasWidth;\n            case 'offsetTop':\n            case 'crestHeight':\n                return Math.random() * canvasHeight;\n            case 'crestCount':\n                return utils_1.randomInRange(canvasWidth / 2, 1);\n            case 'speed':\n                return utils_1.randomInRange(0.4, 0.1);\n            case 'fill':\n                return false;\n            case 'line':\n                return true;\n        }\n    };\n    /**\n     * 获取配置项计算数值\n     * @param property 属性\n     * @param value 原始值\n     * @param range 范围值\n     */\n    Wave.getOptionProcessedValue = function (property, value, range) {\n        if (property === 'offsetTop' ||\n            property === 'offsetLeft' ||\n            property === 'crestHeight') {\n            return utils_1.calcQuantity(value, range);\n        }\n        return value;\n    };\n    /**\n     * 创建波浪线条像素点\n     */\n    Wave.prototype.createDots = function () {\n        var _a = this, canvasWidth = _a.canvasWidth, waveLength = _a.waveLength;\n        var num = this.options.num;\n        while (num--) {\n            var line = [];\n            // 点的 y 轴步进\n            var step = constants_1.doublePi / waveLength[num];\n            // 创建一条线段所需的点\n            for (var i = 0; i <= canvasWidth; i++) {\n                line.push({\n                    x: i,\n                    y: i * step,\n                });\n            }\n            this.elements[num] = line;\n        }\n    };\n    /**\n     * 绘图\n     */\n    Wave.prototype.draw = function () {\n        var _this = this;\n        this.clearCanvasAndSetGlobalAttrs();\n        this.renderMaskMode(function () {\n            _this.drawWaves();\n        });\n        this.requestAnimationFrame();\n    };\n    /**\n     * 绘制波浪效果\n     */\n    Wave.prototype.drawWaves = function () {\n        var _a = this, ctx = _a.ctx, canvasWidth = _a.canvasWidth, canvasHeight = _a.canvasHeight, isPaused = _a.isPaused;\n        var options = this.options;\n        this.elements.forEach(function (lines, i) {\n            var crestHeight = options.crestHeight[i];\n            var offsetLeft = options.offsetLeft[i];\n            var offsetTop = options.offsetTop[i];\n            var speed = options.speed[i];\n            ctx.save();\n            ctx.beginPath();\n            lines.forEach(function (dot, j) {\n                ctx[j ? 'lineTo' : 'moveTo'](dot.x, \n                // y = A sin ( ωx + φ ) + h\n                crestHeight * Math.sin(dot.y + offsetLeft) + offsetTop);\n                !isPaused && (dot.y -= speed);\n            });\n            // 填充\n            if (options.fill[i]) {\n                ctx.lineTo(canvasWidth, canvasHeight);\n                ctx.lineTo(0, canvasHeight);\n                ctx.closePath();\n                ctx.fillStyle = options.fillColor[i];\n                ctx.fill();\n            }\n            // 绘制线条边框\n            if (options.line[i]) {\n                ctx.lineWidth = options.lineWidth[i];\n                ctx.strokeStyle = options.lineColor[i];\n                ctx.stroke();\n            }\n            ctx.restore();\n        });\n    };\n    /**\n     * 窗口尺寸调整事件\n     */\n    Wave.prototype.ownResizeEvent = function () {\n        var _this = this;\n        var props = ['offsetLeft', 'offsetTop', 'crestHeight'];\n        var options = this.options;\n        this.onResize(function (scaleX, scaleY) {\n            // 调整选项缩放后的值\n            props.forEach(function (prop) {\n                var scale = prop === 'offsetLeft' ? scaleX : scaleY;\n                options[prop].forEach(function (value, i, array) {\n                    array[i] = value * scale;\n                });\n            });\n            // 调整点的坐标\n            _this.elements.forEach(function (lines) {\n                lines.forEach(function (dot) {\n                    dot.x *= scaleX;\n                    dot.y *= scaleY;\n                });\n            });\n        });\n    };\n    /**\n     * 更新复杂选项值（合并赋值）\n     * @param property 选项属性\n     * @param newValue 新值\n     */\n    Wave.prototype.updateComplexOptions = function (property, newValue) {\n        if (!newValue)\n            return;\n        var scaleRange = property === 'offsetLeft' ? this.canvasWidth : this.canvasHeight;\n        var options = this.options;\n        var isArrayType = Array.isArray(newValue);\n        options[property].forEach(function (curValue, i, array) {\n            var value = isArrayType ? newValue[i] : newValue;\n            value = Wave.getOptionProcessedValue(property, value, scaleRange);\n            // 未定义部分保持原有值\n            if (utils_1.isUndefined(value)) {\n                value = curValue;\n            }\n            array[i] = value;\n        });\n    };\n    /**\n     * 更新简单选项值（直接赋值）\n     * @param property 选项属性\n     * @param newValue 新值\n     */\n    Wave.prototype.updatePlainOptions = function (option, newValue) {\n        this.options[option] = newValue;\n        if (option === 'mask') {\n            this.loadMaskImage();\n        }\n    };\n    /**\n     * 动态设置 options 选项值\n     */\n    Wave.prototype.setOptions = function (newOptions) {\n        if (!this.isRunningSupported || !utils_1.isPlainObject(newOptions))\n            return;\n        for (var property in newOptions) {\n            if (Object.hasOwnProperty.call(newOptions, property)) {\n                if (plainOptions.indexOf(property) !== -1) {\n                    this.updatePlainOptions(property, newOptions[property]);\n                }\n                else if (complexOptions.indexOf(property) !== -1) {\n                    this.updateComplexOptions(property, newOptions[property]);\n                }\n            }\n        }\n    };\n    Wave.defaultConfig = {\n        // 波纹个数\n        num: 3,\n        // 是否填充背景色，设置为 false 相关值无效\n        fill: false,\n        // 填充的背景色，当 fill 设置为 true 时生效\n        fillColor: [],\n        // 是否绘制边框，设置为 false 相关值无效\n        line: true,\n        // 边框颜色，当 line 设置为 true 时生效，下同\n        lineColor: [],\n        // 边框宽度，空数组则随机 [.2, 2) 的宽度。\n        lineWidth: [],\n        // 波纹横向偏移值，距离 Canvas 左边缘的偏移值\n        // (0, 1) 表示容器宽度的倍数，0 & [1, +∞) 表示具体数值\n        offsetLeft: [],\n        // 波纹纵向偏移值，波纹中点距离 Canvas 顶部的距离\n        // (0, 1) 表示容器高度的倍数，0 & [1, +∞) 表示具体数值\n        offsetTop: [],\n        // 波峰高度，(0, 1) 表示容器高度的倍数，0 & [1, +∞) 表示具体数值\n        crestHeight: [],\n        // 波峰个数，即正弦周期个数，默认随机 [1, 0.2 * 容器宽度)\n        crestCount: [],\n        // 运动速度，默认随机 [.1, .4)\n        speed: [],\n    };\n    return Wave;\n}(mask_1.default));\nexports.default = Wave;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}